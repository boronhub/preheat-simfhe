<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="214" onload="init(evt)" viewBox="0 0 1200 214" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="214.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >logistic_regression.bootstrap_regression_arch.dram_total_rdwr_small</text>
<text id="details" x="10.00" y="197" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="197" > </text>
<g id="frames">
<g >
<title>key_switch_hoisting (7,549,747,200 dram_total_rdwr_small, 3.49%)</title><rect x="701.5" y="69" width="41.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="704.55" y="79.5" >key..</text>
</g>
<g >
<title>mod_down (3,902,799,872 dram_total_rdwr_small, 1.80%)</title><rect x="290.1" y="53" width="21.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="293.07" y="63.5" >m..</text>
</g>
<g >
<title>add (1,931,476,992 dram_total_rdwr_small, 0.89%)</title><rect x="131.8" y="69" width="10.5" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="134.79" y="79.5" ></text>
</g>
<g >
<title>key_switch_hoisting (2,617,245,696 dram_total_rdwr_small, 1.21%)</title><rect x="147.4" y="37" width="14.3" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="150.42" y="47.5" ></text>
</g>
<g >
<title>multiply (7,147,094,016 dram_total_rdwr_small, 3.30%)</title><rect x="420.2" y="85" width="39.0" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="423.17" y="95.5" >mul..</text>
</g>
<g >
<title>key_switch_inner_product (5,718,933,504 dram_total_rdwr_small, 2.64%)</title><rect x="428.0" y="69" width="31.2" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="430.97" y="79.5" >ke..</text>
</g>
<g >
<title>multiply (2,447,376,384 dram_total_rdwr_small, 1.13%)</title><rect x="347.2" y="69" width="13.4" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="350.23" y="79.5" ></text>
</g>
<g >
<title>rotate_sum (66,211,282,944 dram_total_rdwr_small, 30.61%)</title><rect x="692.1" y="85" width="361.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="695.07" y="95.5" >rotate_sum</text>
</g>
<g >
<title>double_multiply (3,605,004,288 dram_total_rdwr_small, 1.67%)</title><rect x="390.6" y="85" width="19.7" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="393.60" y="95.5" ></text>
</g>
<g >
<title>add (1,207,959,552 dram_total_rdwr_small, 0.56%)</title><rect x="1091.9" y="85" width="6.6" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1094.90" y="95.5" ></text>
</g>
<g >
<title>rotate_sum (6,555,697,152 dram_total_rdwr_small, 3.03%)</title><rect x="1056.1" y="101" width="35.8" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1059.14" y="111.5" >rot..</text>
</g>
<g >
<title>mod_reduce_rescale (459,276,288 dram_total_rdwr_small, 0.21%)</title><rect x="144.9" y="69" width="2.5" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="147.92" y="79.5" ></text>
</g>
<g >
<title>key_switch_hoisting (408,944,640 dram_total_rdwr_small, 0.19%)</title><rect x="349.4" y="53" width="2.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="352.39" y="63.5" ></text>
</g>
<g >
<title>bootstrap (119,197,925,376 dram_total_rdwr_small, 55.11%)</title><rect x="10.0" y="133" width="650.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="13.00" y="143.5" >bootstrap</text>
</g>
<g >
<title>multiply (15,829,303,296 dram_total_rdwr_small, 7.32%)</title><rect x="1099.7" y="85" width="86.4" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1102.73" y="95.5" >multiply</text>
</g>
<g >
<title>key_switch (8,921,284,608 dram_total_rdwr_small, 4.12%)</title><rect x="548.5" y="53" width="48.6" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="551.46" y="63.5" >key_..</text>
</g>
<g >
<title>r_square (3,605,004,288 dram_total_rdwr_small, 1.67%)</title><rect x="390.6" y="101" width="19.7" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="393.60" y="111.5" ></text>
</g>
<g >
<title>baby_step_basis (6,318,718,976 dram_total_rdwr_small, 2.92%)</title><rect x="311.4" y="101" width="34.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="314.36" y="111.5" >ba..</text>
</g>
<g >
<title>nesterov_update (522,190,848 dram_total_rdwr_small, 0.24%)</title><rect x="1053.3" y="101" width="2.8" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1056.29" y="111.5" ></text>
</g>
<g >
<title>key_switch_hoisting (666,894,336 dram_total_rdwr_small, 0.31%)</title><rect x="327.6" y="53" width="3.6" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="330.57" y="63.5" ></text>
</g>
<g >
<title>key_switch_hoisting (324,009,984 dram_total_rdwr_small, 0.15%)</title><rect x="545.0" y="69" width="1.8" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="548.01" y="79.5" ></text>
</g>
<g >
<title>key_switch_hoisting (547,356,672 dram_total_rdwr_small, 0.25%)</title><rect x="395.3" y="53" width="3.0" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="398.34" y="63.5" ></text>
</g>
<g >
<title>multiply (3,265,265,664 dram_total_rdwr_small, 1.51%)</title><rect x="392.5" y="69" width="17.8" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="395.45" y="79.5" ></text>
</g>
<g >
<title>key_switch (13,073,645,568 dram_total_rdwr_small, 6.04%)</title><rect x="147.4" y="53" width="71.3" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="150.42" y="63.5" >key_switch</text>
</g>
<g >
<title>key_switch_inner_product (452,984,832 dram_total_rdwr_small, 0.21%)</title><rect x="12.4" y="53" width="2.5" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="15.41" y="63.5" ></text>
</g>
<g >
<title>key_switch_inner_product (1,642,070,016 dram_total_rdwr_small, 0.76%)</title><rect x="351.6" y="53" width="9.0" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="354.62" y="63.5" ></text>
</g>
<g >
<title>double_multiply (2,703,228,928 dram_total_rdwr_small, 1.25%)</title><rect x="345.8" y="85" width="14.8" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="348.83" y="95.5" ></text>
</g>
<g >
<title>iteration (97,096,040,448 dram_total_rdwr_small, 44.89%)</title><rect x="660.3" y="117" width="529.7" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="663.29" y="127.5" >iteration</text>
</g>
<g >
<title>inner_product (72,037,171,200 dram_total_rdwr_small, 33.31%)</title><rect x="660.3" y="101" width="393.0" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="663.29" y="111.5" >inner_product</text>
</g>
<g >
<title>mod_reduce_rescale (427,819,008 dram_total_rdwr_small, 0.20%)</title><rect x="687.3" y="69" width="2.3" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="690.27" y="79.5" ></text>
</g>
<g >
<title>add (419,430,400 dram_total_rdwr_small, 0.19%)</title><rect x="320.6" y="69" width="2.3" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="323.58" y="79.5" ></text>
</g>
<g >
<title>multiply (4,208,984,064 dram_total_rdwr_small, 1.95%)</title><rect x="322.9" y="69" width="22.9" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="325.87" y="79.5" >m..</text>
</g>
<g >
<title>mod_reduce_rescale (308,281,344 dram_total_rdwr_small, 0.14%)</title><rect x="546.8" y="69" width="1.7" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="549.78" y="79.5" ></text>
</g>
<g >
<title>mod_down (3,372,220,416 dram_total_rdwr_small, 1.56%)</title><rect x="1034.9" y="69" width="18.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1037.89" y="79.5" ></text>
</g>
<g >
<title>rotate_digits (11,577,327,616 dram_total_rdwr_small, 5.35%)</title><rect x="597.1" y="69" width="63.2" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="600.13" y="79.5" >rotate..</text>
</g>
<g >
<title>leaf_prods (5,502,926,848 dram_total_rdwr_small, 2.54%)</title><rect x="360.6" y="101" width="30.0" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="363.58" y="111.5" >le..</text>
</g>
<g >
<title>coeff_to_slot (55,129,931,776 dram_total_rdwr_small, 25.49%)</title><rect x="10.6" y="117" width="300.8" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="13.59" y="127.5" >coeff_to_slot</text>
</g>
<g >
<title>key_switch_inner_product (2,680,160,256 dram_total_rdwr_small, 1.24%)</title><rect x="331.2" y="53" width="14.6" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="334.21" y="63.5" ></text>
</g>
<g >
<title>fft (36,865,835,008 dram_total_rdwr_small, 17.04%)</title><rect x="459.2" y="101" width="201.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="462.17" y="111.5" >fft</text>
</g>
<g >
<title>logistic_regression (97,096,040,448 dram_total_rdwr_small, 44.89%)</title><rect x="660.3" y="133" width="529.7" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="663.29" y="143.5" >logistic_regression</text>
</g>
<g >
<title>key_switch_hoisting (113,246,208 dram_total_rdwr_small, 0.05%)</title><rect x="11.8" y="53" width="0.6" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="14.80" y="63.5" ></text>
</g>
<g >
<title>key_switch_hoisting (1,786,773,504 dram_total_rdwr_small, 0.83%)</title><rect x="548.5" y="37" width="9.7" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="551.46" y="47.5" ></text>
</g>
<g >
<title>multiply_plain (452,984,832 dram_total_rdwr_small, 0.21%)</title><rect x="689.6" y="85" width="2.5" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="692.60" y="95.5" ></text>
</g>
<g >
<title>key_switch_hoisting (742,391,808 dram_total_rdwr_small, 0.34%)</title><rect x="1057.1" y="85" width="4.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1060.10" y="95.5" ></text>
</g>
<g >
<title>key_switch_inner_product (7,134,511,104 dram_total_rdwr_small, 3.30%)</title><rect x="558.2" y="37" width="38.9" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="561.21" y="47.5" >key..</text>
</g>
<g >
<title>rotate (8,921,284,608 dram_total_rdwr_small, 4.12%)</title><rect x="548.5" y="69" width="48.6" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="551.46" y="79.5" >rotate</text>
</g>
<g >
<title>key_switch_hoisting (1,428,160,512 dram_total_rdwr_small, 0.66%)</title><rect x="420.2" y="69" width="7.8" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="423.17" y="79.5" ></text>
</g>
<g >
<title>all (216,293,965,824 dram_total_rdwr_small, 100%)</title><rect x="10.0" y="165" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="175.5" ></text>
</g>
<g >
<title>key_switch_hoisting (2,113,929,216 dram_total_rdwr_small, 0.98%)</title><rect x="1121.6" y="69" width="11.5" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1124.56" y="79.5" ></text>
</g>
<g >
<title>mod_reduce_rescale (226,492,416 dram_total_rdwr_small, 0.10%)</title><rect x="1098.5" y="85" width="1.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1101.49" y="95.5" ></text>
</g>
<g >
<title>key_switch_hoisting (475,004,928 dram_total_rdwr_small, 0.22%)</title><rect x="142.3" y="69" width="2.6" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="145.33" y="79.5" ></text>
</g>
<g >
<title>add (339,738,624 dram_total_rdwr_small, 0.16%)</title><rect x="390.6" y="69" width="1.9" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="393.60" y="79.5" ></text>
</g>
<g >
<title>key_switch_inner_product (8,455,716,864 dram_total_rdwr_small, 3.91%)</title><rect x="1133.1" y="69" width="46.1" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1136.09" y="79.5" >key_..</text>
</g>
<g >
<title>add (255,852,544 dram_total_rdwr_small, 0.12%)</title><rect x="345.8" y="69" width="1.4" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="348.83" y="79.5" ></text>
</g>
<g >
<title>key_switch_hoisting (717,225,984 dram_total_rdwr_small, 0.33%)</title><rect x="667.7" y="69" width="3.9" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="670.70" y="79.5" ></text>
</g>
<g >
<title>fft_inner_bsgs (54,343,499,776 dram_total_rdwr_small, 25.12%)</title><rect x="14.9" y="85" width="296.5" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="17.89" y="95.5" >fft_inner_bsgs</text>
</g>
<g >
<title>key_switch_inner_product (53,552,873,472 dram_total_rdwr_small, 24.76%)</title><rect x="742.7" y="69" width="292.2" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="745.73" y="79.5" >key_switch_inner_product</text>
</g>
<g >
<title>add (264,241,152 dram_total_rdwr_small, 0.12%)</title><rect x="1053.8" y="85" width="1.4" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1056.77" y="95.5" ></text>
</g>
<g >
<title>sigmoid_product (17,980,981,248 dram_total_rdwr_small, 8.31%)</title><rect x="1091.9" y="101" width="98.1" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1094.90" y="111.5" >sigmoid_pro..</text>
</g>
<g >
<title>rotate (13,073,645,568 dram_total_rdwr_small, 6.04%)</title><rect x="147.4" y="69" width="71.3" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="150.42" y="79.5" >rotate</text>
</g>
<g >
<title>add (1,302,331,392 dram_total_rdwr_small, 0.60%)</title><rect x="537.9" y="69" width="7.1" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="540.90" y="79.5" ></text>
</g>
<g >
<title>key_switch_inner_product (5,284,823,040 dram_total_rdwr_small, 2.44%)</title><rect x="1061.2" y="85" width="28.8" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1064.15" y="95.5" >ke..</text>
</g>
<g >
<title>mod_reduce_rescale (169,869,312 dram_total_rdwr_small, 0.08%)</title><rect x="1055.2" y="85" width="0.9" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1058.21" y="95.5" ></text>
</g>
<g >
<title>slot_to_coeff (36,865,835,008 dram_total_rdwr_small, 17.04%)</title><rect x="459.2" y="117" width="201.1" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="462.17" y="127.5" >slot_to_coeff</text>
</g>
<g >
<title>multiply_plain (717,225,984 dram_total_rdwr_small, 0.33%)</title><rect x="1186.1" y="85" width="3.9" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1189.09" y="95.5" ></text>
</g>
<g >
<title>mod_down (2,657,091,584 dram_total_rdwr_small, 1.23%)</title><rect x="645.8" y="53" width="14.5" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="648.79" y="63.5" ></text>
</g>
<g >
<title>key_switch_inner_product (10,456,399,872 dram_total_rdwr_small, 4.83%)</title><rect x="161.7" y="37" width="57.0" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="164.70" y="47.5" >key_sw..</text>
</g>
<g >
<title>mod_down (352,321,536 dram_total_rdwr_small, 0.16%)</title><rect x="1090.0" y="85" width="1.9" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1092.98" y="95.5" ></text>
</g>
<g >
<title>bootstrap_regression (216,293,965,824 dram_total_rdwr_small, 100.00%)</title><rect x="10.0" y="149" width="1180.0" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="13.00" y="159.5" >bootstrap_regression</text>
</g>
<g >
<title>rotate (566,231,040 dram_total_rdwr_small, 0.26%)</title><rect x="11.8" y="85" width="3.1" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="14.80" y="95.5" ></text>
</g>
<g >
<title>eval_sine (27,093,106,688 dram_total_rdwr_small, 12.53%)</title><rect x="311.4" y="117" width="147.8" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="314.36" y="127.5" >eval_sine</text>
</g>
<g >
<title>fft_inner_bsgs (36,865,835,008 dram_total_rdwr_small, 17.04%)</title><rect x="459.2" y="85" width="201.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="462.17" y="95.5" >fft_inner_bsgs</text>
</g>
<g >
<title>mod_reduce_rescale (1,258,291,200 dram_total_rdwr_small, 0.58%)</title><rect x="1179.2" y="69" width="6.9" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1182.22" y="79.5" ></text>
</g>
<g >
<title>fft (54,343,499,776 dram_total_rdwr_small, 25.12%)</title><rect x="14.9" y="101" width="296.5" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="17.89" y="111.5" >fft</text>
</g>
<g >
<title>multiply (5,372,903,424 dram_total_rdwr_small, 2.48%)</title><rect x="660.3" y="85" width="29.3" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="663.29" y="95.5" >mu..</text>
</g>
<g >
<title>tree_up (8,963,227,648 dram_total_rdwr_small, 4.14%)</title><rect x="410.3" y="101" width="48.9" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="413.27" y="111.5" >tree..</text>
</g>
<g >
<title>key_switch_inner_product (2,868,903,936 dram_total_rdwr_small, 1.33%)</title><rect x="671.6" y="69" width="15.7" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="674.62" y="79.5" ></text>
</g>
<g >
<title>double_multiply (4,628,414,464 dram_total_rdwr_small, 2.14%)</title><rect x="320.6" y="85" width="25.2" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="323.58" y="95.5" >d..</text>
</g>
<g >
<title>key_switch_inner_product (2,189,426,688 dram_total_rdwr_small, 1.01%)</title><rect x="398.3" y="53" width="12.0" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="401.32" y="63.5" ></text>
</g>
<g >
<title>conj_and_add (786,432,000 dram_total_rdwr_small, 0.36%)</title><rect x="10.6" y="101" width="4.3" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="13.59" y="111.5" ></text>
</g>
<g >
<title>giant_step_basis (2,703,228,928 dram_total_rdwr_small, 1.25%)</title><rect x="345.8" y="101" width="14.8" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="348.83" y="111.5" ></text>
</g>
<g >
<title>key_switch (566,231,040 dram_total_rdwr_small, 0.26%)</title><rect x="11.8" y="69" width="3.1" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="14.80" y="79.5" ></text>
</g>
<g >
<title>rotate_digits (16,975,396,864 dram_total_rdwr_small, 7.85%)</title><rect x="218.7" y="69" width="92.7" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="221.75" y="79.5" >rotate_digits</text>
</g>
</g>
</svg>
